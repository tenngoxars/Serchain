// i18n.js
export const translations = {
  zh: {
    title: "Serchain Èìæ‰∏äËøΩË∏™Âô®",
    addressPlaceholder: "ËØ∑ËæìÂÖ• Ethereum Âú∞ÂùÄÔºà0x ÂºÄÂ§¥Ôºâ",
    queryBtn: "Êü•ËØ¢",
    querying: "‚è≥ Êü•ËØ¢‰∏≠...",
    invalidAddress: "‚ùå ËØ∑ËæìÂÖ•ÊúâÊïàÁöÑ Ethereum Âú∞ÂùÄ„ÄÇ",
    noRecords: "üò∂ Êú™ÊâæÂà∞‰ªª‰Ωï‰∫§ÊòìËÆ∞ÂΩï„ÄÇ",
    countText: (n) => `ÂÖ± ${n} Êù°‰∫§ÊòìËÆ∞ÂΩï`,
    download: "‰∏ãËΩΩ CSV",
    errorPrefix: "‚ùå ÈîôËØØÔºö",
    fetchErrorPrefix: "‚ùå ËØ∑Ê±ÇÂ§±Ë¥•Ôºö",
    historyLabel: "ÂéÜÂè≤Êü•ËØ¢Ôºö",
    clearHistory: "Ê∏ÖÁ©∫ÂéÜÂè≤",
    tableHeaders: {
      index: "#",
      time: "Êó∂Èó¥",
      direction: "ÊñπÂêë",
      from: "ÂèëÂá∫Âú∞ÂùÄ",
      to: "Êé•Êî∂Âú∞ÂùÄ",
      value: "ÈáëÈ¢ù",
      asset: "ËµÑ‰∫ß",
      gasFee: "Gas Ë¥π (ETH)"
    },
    direction: {
      in: "ËΩ¨ÂÖ•",
      out: "ËΩ¨Âá∫"
    },
    toggleLabel: "üá®üá≥ ÁÆÄ‰Ωì‰∏≠Êñá / üá¨üáß English",
  },
  en: {
    title: "Serchain On-chain Tracker",
    addressPlaceholder: "Enter Ethereum address (starts with 0x)",
    queryBtn: "Search",
    querying: "‚è≥ Querying...",
    invalidAddress: "‚ùå Please enter a valid Ethereum address.",
    noRecords: "üò∂ No transactions found.",
    countText: (n) => `${n} transfers found`,
    download: "Download CSV",
    errorPrefix: "‚ùå Error: ",
    fetchErrorPrefix: "‚ùå Request failed: ",
    historyLabel: "History:",
    clearHistory: "Clear History",
    tableHeaders: {
      index: "#",
      time: "Time",
      direction: "Direction",
      from: "From",
      to: "To",
      value: "Value",
      asset: "Asset",
      gasFee: "Gas Fee (ETH)"
    },
    direction: {
      in: "Received",
      out: "Sent"
    },
    toggleLabel: "üá®üá≥ Chinese / üá¨üáß English",
  }
};

export let currentLang = "zh";

export function setLanguage(lang) {
  currentLang = lang;
  const t = translations[lang];

  document.title = t.title;
  document.getElementById("title").textContent = t.title;
  document.getElementById("addressInput").placeholder = t.addressPlaceholder;
  document.getElementById("queryBtn").textContent = t.queryBtn;
  document.getElementById("downloadLink").textContent = t.download;
  document.getElementById("langToggle").textContent = t.toggleLabel;

  document.querySelector("th[data-key='index']").textContent = t.tableHeaders.index;
  document.querySelector("th[data-key='time']").textContent = t.tableHeaders.time;
  document.querySelector("th[data-key='direction']").textContent = t.tableHeaders.direction;
  document.querySelector("th[data-key='from']").textContent = t.tableHeaders.from;
  document.querySelector("th[data-key='to']").textContent = t.tableHeaders.to;
  document.querySelector("th[data-key='value']").textContent = t.tableHeaders.value;
  document.querySelector("th[data-key='asset']").textContent = t.tableHeaders.asset;
  document.querySelector("th[data-key='gasFee']").textContent = t.tableHeaders.gasFee;

  if (window.lastTransfers) {
    window.renderTable(window.lastTransfers);  // Ê≥®ÊÑè renderTable Âú®ÂÖ®Â±ÄÊåÇËΩΩ
  }
}

export function setStatus(key, extra = "") {
  const msg = translations[currentLang][key];
  const statusText = document.getElementById("status");
  statusText.textContent = typeof msg === "function" ? msg(extra) : msg + extra;
}